#!/bin/zsh
# .zshrc

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color | *-256color) color_prompt=yes ;;
esac

# ---------------------------------------------------------------------------- #
#               ------- History ------
# ---------------------------------------------------------------------------- #
setopt hist_ignore_all_dups
setopt hist_ignore_space
HISTSIZE=9999

# ---------------------------------------------------------------------------- #
#               ------- Environment ------
# ---------------------------------------------------------------------------- #

# fzf
export FZF_BASE=/home/linuxbrew/.linuxbrew/bin/fzf
export FZF_DEFAULT_COMMAND='fzf'

DISABLE_FZF_AUTO_COMPLETION="false"
DISABLE_FZF_KEY_BINDINGS="false"

# Zoxide
eval "$(zoxide init zsh --cmd cd)"

# ---------------------------------------------------------------------------- #
#               ------- Alias-Finder ------
# ---------------------------------------------------------------------------- #
zstyle ':omz:plugins:alias-finder' autoload yes # disabled by default
zstyle ':omz:plugins:alias-finder' longer yes   # disabled by default
zstyle ':omz:plugins:alias-finder' exact yes    # disabled by default
zstyle ':omz:plugins:alias-finder' cheaper yes  # disabled by default

# ---------------------------------------------------------------------------- #
#               ------- Docker ------
# ---------------------------------------------------------------------------- #
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# ---------------------------------------------------------------------------- #
#               ------- Eza ------
# ---------------------------------------------------------------------------- #
zstyle ':omz:plugins:eza' 'dirs-first' yes
zstyle ':omz:plugins:eza' 'git-status' yes
zstyle ':omz:plugins:eza' 'header' no
zstyle ':omz:plugins:eza' 'show-group' yes
zstyle ':omz:plugins:eza' 'icons' yes
zstyle ':omz:plugins:eza' 'size-prefix' si # binary,none
# zstyle ':omz:plugins:eza' 'time-style' $TIME_STYLE
zstyle ':omz:plugins:eza' 'hyperlink' no

# ---------------------------------------------------------------------------- #
#               ------- Antidote --------
# ---------------------------------------------------------------------------- #
source ${HOME}/.local/antidote/antidote.zsh
antidote load ${HOME}/.config/zsh/plugins.txt

# ---------------------------------------------------------------------------- #
#               ------- Personal Aliases & Functions --------
# ---------------------------------------------------------------------------- #
function source-if-exists() { if test -r "$1"; then source "$1"; fi; }

source-if-exists ~/.config/sh/functions.sh
source-if-exists ~/.config/sh/aliases.sh
source-if-exists ~/.kube/aliases.sh

function load-aliases-and-functions() {
  source ~/.config/sh/aliases.sh
  source ~/.config/sh/functions.sh
}

precmd_functions+=(load-aliases-and-functions)

# ---------------------------------------------------------------------------- #
#               ------- Completions --------
# ---------------------------------------------------------------------------- #
autoload -Uz bashcompinit
bashcompinit

# Infrastructure as Code (IaC)
eval "$(pulumi gen-completion zsh)"

# Language - Python
eval "$(register-python-argcomplete cz)"
eval "$(register-python-argcomplete pipx)"
source ${HOME}/.pyenv/completions/pyenv.zsh

# Orchestration
eval "$(grype completion zsh)"
eval "$(stern --completion zsh)"
eval "$(trivy completion zsh)"

# Version Control System (VCS)
eval "$(gitleaks completion zsh)"

# Tools
eval "$(gonzo completion zsh)"
eval "$(yq shell-completion zsh)"

# ---------------------------------------------------------------------------- #
#               ------- Oh My Posh --------
# ---------------------------------------------------------------------------- #
if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
  eval "$(oh-my-posh init zsh --config ~/.config/oh-my-posh/default.toml)"
fi
