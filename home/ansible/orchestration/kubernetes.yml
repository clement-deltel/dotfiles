- name: Kubernetes
  hosts: all
  gather_facts: true
  vars_files:
    - ../vars/main.yml

  tasks:
  # -------------------------------------------------------------------------- #
  #               ------- Aliases ------
  # -------------------------------------------------------------------------- #
  # Aliases collection from https://github.com/ahmetb/kubectl-aliases
  - name: Aliases
    tags: [init, update]
    block:

    - name: Create .kube directory
      ansible.builtin.file:
        path: "/home/{{ ansible_user_id }}/.kube"
        state: directory
        mode: 0700
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Download aliases
      ansible.builtin.uri:
        method: GET
        url: https://raw.githubusercontent.com/ahmetb/kubectl-aliases/master/.kubectl_aliases
        dest: "/home/{{ ansible_user_id }}/.kube/aliases.sh"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        follow_redirects: safe
        mode: 0700

    - name : Update aliases
      ansible.builtin.replace:
        path: "/home/{{ ansible_user_id }}/.kube/aliases.sh"
        regexp: kubectl
        replace: kctl


  # -------------------------------------------------------------------------- #
  #               ------- Kubernetes CLI ------
  # -------------------------------------------------------------------------- #
  - name: Kubernetes CLI
    tags: [init, update]
    block:

    - name: Get latest version
      ansible.builtin.uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: true
      register: version

    - name: Download binary
      ansible.builtin.uri:
        method: GET
        url: https://dl.k8s.io/release/{{ version.content }}/bin/{{ ansible_system | lower }}/{{ deb_architecture[ansible_architecture] }}/kubectl
        follow_redirects: safe
        dest: "tmp/kubectl"

    - name: Get checksum
      ansible.builtin.shell: # using shell to support "|"
        cmd: sha256sum /tmp/kubectl | cut -d " " -f1
      register: checksum

    - name: Download control checksum
      ansible.builtin.uri:
        method: GET
        url: https://dl.k8s.io/release/{{ version.content }}/bin/{{ ansible_system | lower }}/{{ deb_architecture[ansible_architecture] }}/kubectl.sha256
        follow_redirects: safe
        dest: "tmp/kubectl.sha256"

    - name: Get control checksum
      ansible.builtin.command:
        cmd: cat /tmp/kubectl.sha256
      register: control_checksum

    - name: Verify checksum
      ansible.builtin.assert:
        that:
          - checksum.stdout == control_checksum.stdout
        fail_msg: "checksum verification failed"
        success_msg: "checksum verified"

    - name: Copy binary with owner and permissions
      ansible.builtin.copy:
        src: "/tmp/kubectl"
        dest: "/usr/bin/kubectl"
        remote_src: true
        owner: root
        group: root
        mode: 0755

    - name: Remove temporary binary
      ansible.builtin.file:
        path: "{{ kubectl_install_tmp }}"
        state: absent

    # ------------------------------------------------------------------------ #
    #               ------- Version ------
    # ------------------------------------------------------------------------ #
    always:
    - name: Confirm version
      tags: [init, update]
      ansible.builtin.command:
        cmd: kubectl version --client
      register: version
      changed_when: false

    - name: Show version
      tags: [init, update]
      when: version is defined
      ansible.builtin.debug:
        msg: "Installed version: {{ version.stdout }}"

  # -------------------------------------------------------------------------- #
  #               ------- Formulas ------
  # -------------------------------------------------------------------------- #
  - name: Formulas
    become_user: "{{ ansible_user_id }}"
    block:

    - name: Homebrew - Show formulas
      tags: [init, update]
      ansible.builtin.debug:
        msg: "Formulas: {{ kubernetes_formulas }}"

    # brew install
    - name: Homebrew - Install formulas
      tags: init
      community.general.homebrew:
        name: "{{ kubernetes_formulas }}"
        state: present
        update_homebrew: true

    # brew upgrade
    - name: Homebrew - Upgrade formulas
      tags: update
      community.general.homebrew:
        name: "{{ kubernetes_formulas }}"
        state: latest
        update_homebrew: true
