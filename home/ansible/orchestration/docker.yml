- name: Docker
  hosts: all
  gather_facts: true
  vars_files:
    - ../vars/main.yml

  tasks:
  # Users
  - name: Users
    tags: init
    block:

    # sudo groupadd -g 1001 docker
    - name: Create group
      ansible.builtin.group:
        name: docker
        gid: "{{ docker_gid }}"
        state: present

    # sudo useradd -c "Docker" -g docker -m -d /home/docker -s /bin/bash -u 1001 docker
    - name: Create user
      ansible.builtin.user:
        name: docker
        uid: "{{ docker_uid }}"
        group: docker
        home: /home/docker
        shell: /bin/bash
        comment: Docker
        state: present

    # sudo usermod -a -G docker ${USER}
    - name: Add user to group
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: true

  # Dependencies
  - name: Dependencies
    tags: [init, update]
    ansible.builtin.include_tasks:
      file: ../tasks/packages.yml
    vars:
      package_list: "{{ docker_dependencies }}"
      package_type: dependencies

  # Repository
  # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --output /etc/apt/keyrings/docker.gpg
  # echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - name: Repository
    tags: init
    ansible.builtin.include_tasks:
      file: ../tasks/repository.yml
    vars:
      key_url: https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
      key_output: /etc/apt/keyrings/docker.gpg
      repository: "deb [arch={{ deb_architecture[ansible_architecture] }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"

  # Packages
  - name: Packages
    tags: [init, update]
    ansible.builtin.include_tasks:
      file: ../tasks/packages.yml
    vars:
      package_list: "{{ docker_packages }}"

  # Formulas
  - name: Formulas
    tags: [init, update]
    ansible.builtin.include_tasks:
      file: ../tasks/formulas.yml
    vars:
      formulas: "{{ docker_formulas }}"

  # Daemon
  # - name: Daemon
  #   block:

  #   - name: Create daemon.json
  #     ansible.builtin.copy:
  #       dest:
  #       content: |

  # Service
  - name: Service
    become: true
    block:

    # sudo systemctl enable docker && sudo systemctl start docker
    - name: Enable service
      tags: init
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started

    # sudo systemctl restart docker
    - name: Restart service
      tags: update
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: restarted

  # Docker - Version
  - name: Docker - Version
    tags: [init, update]
    ansible.builtin.include_tasks:
      file: ../tasks/version.yml
    vars:
      cmd: docker --version

  # Docker Compose - Version
  - name: Docker Compose - Version
    tags: [init, update]
    ansible.builtin.include_tasks:
      file: ../tasks/version.yml
    vars:
      cmd: docker compose version
