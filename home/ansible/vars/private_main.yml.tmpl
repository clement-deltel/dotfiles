# ---------------------------------------------------------------------------- #
#               ------- Ansible ------
# ---------------------------------------------------------------------------- #
deb_architecture: { "armv6l": "armhf", "armv7l": "armhf", "aarch64": "arm64", "x86_64": "amd64", "i386": "i386" }

# ---------------------------------------------------------------------------- #
#               ------- APT ------
# ---------------------------------------------------------------------------- #
apt_packages:
# Modern Replacements
- bat
- duf
- fd-find
- ncdu
- ripgrep
# Monitoring
- htop
- hwinfo
- iotop
- progress
# Network
- ethtool
- fping
- ipcalc
- mtr
- net-tools                  # networking toolkit
- termshark
- trippy
- tshark                     # network traffic analyzer
- wireshark-common           # network protocol analyzer libraries
# Search
- jq
- ranger
# Security
- age
# Software Development
- build-essential            # informational list of build-essential packages
- cmake                      # cross-platform, open-source make system
- git
- libfmt-dev                 # fast type-safe C++ formatting library
- libpq-dev                  # library to develop with PostgreSQL
- portaudio19-dev            # library required for PyAudio
# System
- nvtop
# Other
- figlet
- magic-wormhole
- moreutils                  # collection of the Unix tools that nobody thought to write long ago
- patchelf                   # utility to modify the dynamic linker and RPATH of ELF executables
- pdftk
- pwgen
- unp
- vim
- xclip
# Dependencies
- apache2-utils              # htpasswd utility
- bash-completion            # programmable completion for the bash shell
- curl                       # command line tool for transferring data with URL syntax
- man-db                     # man pages
- nfs-common                 # NFS support files common to client and server
- ninja-build                # small build system closest in spirit to Make
- software-properties-common # manage the repositories that you install software from
- ssh                        # secure shell client and server
- tzdata                     # timezone
- unzip                      # de-archiver for .zip files
- zip                        # archiver for .zip files

apt_repositories:
- ppa:deadsnakes/ppa
- ppa:fujiapple/trippy

# ---------------------------------------------------------------------------- #
#               ------- AWS ------
# ---------------------------------------------------------------------------- #
aws_dependencies:
- firefox   # web browser
- xdg-utils # enable starting a browser to run aws sso login
- zip       # archiver for .zip files

aws_profile: default
aws_region: us-east-2
aws_format: yaml

aws_sso_account_id: '{{ .aws_sso_account_id }}'
aws_sso_region: eu-central-1
aws_sso_registration_scopes: 'sso:account:access'
aws_sso_role_name: 'LocalAdminAccess'
aws_sso_start_url: '{{ .aws_sso_start_url }}'

# ---------------------------------------------------------------------------- #
#               ------- Bitwarden ------
# ---------------------------------------------------------------------------- #
bitwarden_dependencies:
- curl          # command line tool for transferring data with URL syntax
- jq
- libsecret-1-0 # secret store

# ---------------------------------------------------------------------------- #
#               ------- Docker ------
# ---------------------------------------------------------------------------- #
docker_gid: 1001
docker_uid: 1001

docker_dependencies:
- ca-certificates # common CA certificates
- curl            # command line tool for transferring data with URL syntax
- gnupg           # GNU privacy guard
docker_packages:
- docker-ce
- docker-ce-cli
- containerd.io
- docker-buildx-plugin
- docker-compose-plugin
- skopeo
docker_formulas:
- dive
- goodwithtech/r/dockle
- grype
- hadolint
- lazydocker
- trivy

docker_images:
- docker.io/library/archlinux:base-20250302.0.316047
- docker.io/library/debian:12.10
- docker.io/library/fedora:42
- docker.io/library/mongo:7.0.4
- docker.io/library/nixos/nix:2.27.1
- docker.io/library/postgis/postgis:15-3.4
- docker.io/library/postgres:15.0
- docker.io/library/quay.io/centos/centos:10
- docker.io/library/rabbitmq:3.12.10-management
- docker.io/library/redis:7.2.3
- docker.io/library/ubuntu:22.04

# ---------------------------------------------------------------------------- #
#               ------- Eza ------
# ---------------------------------------------------------------------------- #
eza_dependencies:
- gpg # GNU privacy guard
eza_packages:
- eza

# ---------------------------------------------------------------------------- #
#               ------- Go ------
# ---------------------------------------------------------------------------- #
go_version: 1.25.1

# ---------------------------------------------------------------------------- #
#               ------- Google Cloud Platform ------
# ---------------------------------------------------------------------------- #
gcp_dependencies:
- apt-transport-https # https support
- ca-certificates     # common CA certificates
- curl                # command line tool for transferring data with URL syntax
- firefox             # web browser
- gnupg               # GNU privacy guard
- xdg-utils           # enable starting a browser to run gcloud init
gcp_packages:
- google-cloud-cli
- google-cloud-cli-gke-gcloud-auth-plugin

# ---------------------------------------------------------------------------- #
#               ------- Helm ------
# ---------------------------------------------------------------------------- #
helm_install_url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3

helm_plugin_names:
- secrets
- unittest
helm_plugin_urls:
- https://github.com/jkroepke/helm-secrets
- https://github.com/helm-unittest/helm-unittest

helm_formulas:
- helmfile

# ---------------------------------------------------------------------------- #
#               ------- Homebrew ------
# ---------------------------------------------------------------------------- #
homebrew_dependencies:
- build-essential  # informational list of build-essential packages
- curl             # command line tool for transferring data with URL syntax
- git
- language-pack-en # translation updates for language English
- locales          # GNU C Library: National Language (locale) data
homebrew_install_url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh

homebrew_formulas:
# CI/CD
- act
# Directories & Files
- croc
# Log Analysis
- gonzo
- lnav
# Modern Replacements
- dua-cli
- procs
# Monitoring
- btop
- fastfetch
- gping
# Search
- fzf
- grex
# Software Development
- ls-lint
- tokei
- varlock
# Other
- tlrc
- yq

# ---------------------------------------------------------------------------- #
#               ------- Kubernetes ------
# ---------------------------------------------------------------------------- #
kubernetes_formulas:
- k9s
- kind
- kubecolor
- kubectx
- kubetail
- pinniped-cli
- stern

# ---------------------------------------------------------------------------- #
#               ------- NodeJS ------
# ---------------------------------------------------------------------------- #
node_dependencies:
- build-essential # informational list of build-essential packages
- ca-certificates # common CA certificates
- curl            # command line tool for transferring data with URL syntax
- gnupg           # GNU privacy guard
node_major: 20
node_packages:
- nodejs

npm_packages:
- "@bitnami/readme-generator-for-helm"
- "@commitlint/cli"
- "@commitlint/config-conventional"
- "@commitlint/format"
- "conventional-changelog-atom"

# ---------------------------------------------------------------------------- #
#               ------- NVIDIA ------
# ---------------------------------------------------------------------------- #
# See https://www.nvidia.com/Download/index.aspx for more details.

nvidia_packages:
- cuda-toolkit-12-8        # NVIDIA CUDA development toolkit
- nvidia-container-toolkit # NVIDIA container Toolkit
# - nvidia-driver-570

# ---------------------------------------------------------------------------- #
#               ------- Oh My Posh ------
# ---------------------------------------------------------------------------- #
omp_install_url: https://ohmyposh.dev/install.sh

# ---------------------------------------------------------------------------- #
#               ------- Pulumi ------
# ---------------------------------------------------------------------------- #
pulumi_install_url: https://get.pulumi.com

# ---------------------------------------------------------------------------- #
#               ------- Python ------
# ---------------------------------------------------------------------------- #
python_dependencies:
- gdal-bin         # executable to use GDAL with Python
- libbz2-dev       # data compression library to develop with Python
- libgdal-dev      # library to use GDAL with Python
- liblzma-dev

python_packages:
- python3
- python3-docker   # used by Ansible modules
- python3-pip
- python3-tk
- python3-venv
- python3.11-dev
- python3.11-venv
- python-is-python3

pip_packages:
- aiohttp          # async http client/server framework
- asyncer          # async and await, focused on developer experience
- faker
- filetype         # infer file type and MIME type of any file/buffer
- gradio           # library for easily interacting with trained machine learning models
- markitdown
- onnxruntime      # runtime accelerator for machine learning models
- pillow           # imaging library
- pre-commit
- Pygments
- rembg            # remove image background
- watchdog         # filesystem events monitoring
- whisper-live

pyenv_dependencies:
- build-essential  # informational list of build-essential packages
- bzip2            # high-quality block-sorting file compressor
- libffi-dev       # foreign function interface library
- libncursesw5-dev #
- libreadline-dev  # GNU readline and history libraries
- libsqlite3-dev   # SQLite 3 development files
- libssl-dev       # secure sockets layer toolkit
- zlib1g-dev       # compression library
pyenv_install_url: https://pyenv.run
pyenv_python_version: 3.11.13

uv_install_url: https://astral.sh/uv/install.sh

# ---------------------------------------------------------------------------- #
#               ------- Rust ------
# ---------------------------------------------------------------------------- #
rust_install_url: https://sh.rustup.rs

# ---------------------------------------------------------------------------- #
#               ------- Terraform ------
# ---------------------------------------------------------------------------- #
terraform_dependencies:
- gnupg                      # GNU privacy guard
- software-properties-common # manage the repositories that you install software from

# ---------------------------------------------------------------------------- #
#               ------- Version Control System (VCS) ------
# ---------------------------------------------------------------------------- #
git_packages:
- git
- git-filter-repo

git_lfs_install_url: https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
git_lfs_packages:
- git-lfs # git extension for versioning large files

git_formulas:
- commitizen
- gitleaks
- gitlint
- git-cliff
- lazygit
- prek

# ---------------------------------------------------------------------------- #
#               ------- WezTerm ------
# ---------------------------------------------------------------------------- #
wezterm_packages:
- wezterm

# ---------------------------------------------------------------------------- #
#               ------- Zoxide ------
# ---------------------------------------------------------------------------- #
zoxide_install_url: https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh

# ---------------------------------------------------------------------------- #
#               ------- Zsh ------
# ---------------------------------------------------------------------------- #
zsh_dependencies:
- curl # command line tool for transferring data with URL syntax
- git
- zsh  # shell with lots of features
